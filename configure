#!/bin/bash

showhelp()
{
cat << ENDHELP

usage: configure [options]
Configure p2p

Options:
    --scheme=<build_scheme>
    Builds p2p with specified build scheme. Supported schemes is: master, dev, branch. Default: master

    --help
    Display this help screen
ENDHELP
}

upx_bin=upx
upx_go=$GOPATH/bin/goupx
name_prefix=p2p
scheme="master"
branch=`git branch | grep \* | cut -d ' ' -f2`

while [ $# -ge 1 ]; do
    case "$1" in
        --scheme=*)
            scheme="`echo ${1} | awk '{print substr($0,10)}'`" ;;
        --help)
            showhelp
            exit 0
            ;;
        *)
            showhelp
            exit 1
            ;;
    esac

    shift
done

echo "Preparing $scheme build"

if [ "$scheme" == "branch" ]; then
    # Configure output binary name
    echo "Current branch is $branch"
    if [ "$branch" != "master" ]; then
        name_base="$name_prefix-$branch"
    fi
elif [ "$scheme" == "dev" ]; then
    name_base="$name_prefix-dev"
elif [ "$scheme" == "master" ]; then
    name_base="$name_prefix"
else
    echo "ERROR! $scheme scheme is not supported"
    showhelp
    exit 1
fi
echo "Building $name_base"

echo "checking go environment"
if [ "$GOPATH" == "" ]; then
    echo "GOPATH is not set. Aborting"
    exit 1
fi

echo "checking upx"
hash upx 2>/dev/null || { echo >&2 "upx is not installed" ; upx_bin="" ; }

echo "checking goupx"
if [ ! -x $upx_go ]; then
    echo "upxgo was not found"
    upx_go=""
fi

# Configure Debian packager
echo "checking debuild"
which debuild
if [ $? != 0 ]; then
    echo "debuild was not found"
else
    # Prepare changelog: TODO
    # date -d'11/25/2016' "+%a, %d %b %Y %H:%M:%S %z"
    rm -f deb-changelog.tmp
    started=0
    while IFS='' read -r line || [[ -n "$line" ]]; do
        st=${line:0:2}
        if [ "$st" == "##" ]; then
            if [ $started -eq 1 ]; then
                date_formatted=`date -d"$release_date" "+%a, %d %b %Y %H:%M:%S %z"`
                echo "" >> deb-changelog.tmp
                echo " -- Subutai Social <jenkins@subut.ai> $date_formatted" >> deb-changelog.tmp
                echo "" >> deb-changelog.tmp
                started=0
            fi
            started=1
            release_date=`echo $line | cut -d "]" -f2 | sed -e 's/^[[:space:]]*//'`
            version_num=`echo $line | cut -d "[" -f2 | cut -d "]" -f1`
            echo "subutai-$name_base ($version_num) unstable; urgency=medium" >> deb-changelog.tmp
            echo "" >> deb-changelog.tmp
        elif [ "$st" == "* " ]; then
            echo " $line" >> deb-changelog.tmp
        fi
    done < CHANGELOG
    if [ $started -eq 1 ]; then
        date_formatted=`date -d"$release_date" "+%a, %d %b %Y %H:%M:%S %z"`
        echo "" >> deb-changelog.tmp
        echo " -- Subutai Social <admin@subut.ai> $date_formatted" >> deb-changelog.tmp
        echo "" >> deb-changelog.tmp
        started=0
    fi

    mv deb-changelog.tmp debian/changelog

    # Prepare postinst script
    if [ "$branch" == "master" ]; then
        cp debian/master-postinst debian/postinst
    else
        cp debian/dev-postinst debian/postinst
    fi
fi

# generating config.make file
echo "# config.make generated by configure script" > config.make
if [ "$upx_go" != "" ]; then
    echo "UPX_GO = $upx_go" >> config.make
    echo "export UPX_GO" >> config.make
    echo "NAME_BASE = $name_base" >> config.make
    echo "export NAME_BASE" >> config.make
    echo "NAME_PREFIX = $name_prefix" >> config.make
    echo "export NAME_PREFIX" >> config.make
    if [ "$upx_bin" != "" ]; then
        echo "UPX_BIN = $upx_bin" >> config.make
        echo "export UPX_BIN" >> config.make
    fi
fi
